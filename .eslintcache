[{"D:\\projects\\challenge\\src\\index.js":"1","D:\\projects\\challenge\\src\\App.js":"2","D:\\projects\\challenge\\src\\reportWebVitals.js":"3","D:\\projects\\challenge\\src\\components\\Navbar.js":"4","D:\\projects\\challenge\\src\\pages\\Home.js":"5","D:\\projects\\challenge\\src\\db\\booksdata.js":"6","D:\\projects\\challenge\\src\\store\\reducers\\authReducer.js":"7","D:\\projects\\challenge\\src\\store\\actions\\actionType.js":"8","D:\\projects\\challenge\\src\\pages\\Auth.js":"9","D:\\projects\\challenge\\src\\store\\actions\\auth.js":"10","D:\\projects\\challenge\\src\\axios.js":"11","D:\\projects\\challenge\\src\\store\\actions\\index.js":"12","D:\\projects\\challenge\\src\\pages\\authStyle.js":"13","D:\\projects\\challenge\\src\\store\\actions\\cart.js":"14","D:\\projects\\challenge\\src\\store\\reducers\\cartReducer.js":"15","D:\\projects\\challenge\\src\\pages\\Cart.js":"16"},{"size":1051,"mtime":1611407130323,"results":"17","hashOfConfig":"18"},{"size":534,"mtime":1611405485034,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1606822286120,"results":"20","hashOfConfig":"18"},{"size":3890,"mtime":1611411371686,"results":"21","hashOfConfig":"18"},{"size":2518,"mtime":1611408615955,"results":"22","hashOfConfig":"18"},{"size":3084575,"mtime":1611399777707,"results":"23","hashOfConfig":"18"},{"size":994,"mtime":1611401610089,"results":"24","hashOfConfig":"18"},{"size":393,"mtime":1611409947744,"results":"25","hashOfConfig":"18"},{"size":6440,"mtime":1611404556527,"results":"26","hashOfConfig":"18"},{"size":934,"mtime":1611406082954,"results":"27","hashOfConfig":"18"},{"size":141,"mtime":1611411249446,"results":"28","hashOfConfig":"18"},{"size":106,"mtime":1611409401406,"results":"29","hashOfConfig":"18"},{"size":970,"mtime":1611401627378,"results":"30","hashOfConfig":"18"},{"size":1215,"mtime":1611409947740,"results":"31","hashOfConfig":"18"},{"size":575,"mtime":1611410503904,"results":"32","hashOfConfig":"18"},{"size":2030,"mtime":1611410419311,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h4llfm",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\challenge\\src\\index.js",[],"D:\\projects\\challenge\\src\\App.js",[],"D:\\projects\\challenge\\src\\reportWebVitals.js",[],["70","71"],"D:\\projects\\challenge\\src\\components\\Navbar.js",[],"D:\\projects\\challenge\\src\\pages\\Home.js",["72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { booksData } from \"../db/booksdata\";\r\nimport * as actions from \"../store/actions/index\";\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"title\", headerName: \"Title name\", width: 390 },\r\n  { field: \"authors\", headerName: \"Authors \", width: 300 },\r\n  {\r\n    field: \"averageRating\",\r\n    headerName: \"Rating\",\r\n    type: \"number\",\r\n    width: 110,\r\n  },\r\n  {\r\n    field: \"isbn\",\r\n    headerName: \"ISBN\",\r\n    width: 130,\r\n  },\r\n  {\r\n    field: \"languageCode\",\r\n    headerName: \"Language\",\r\n    width: 90,\r\n  },\r\n  {\r\n    field: \"ratingsCount\",\r\n    headerName: \"Rating Counts\",\r\n    type: \"number\",\r\n    width: 100,\r\n  },\r\n  {\r\n    field: \"price\",\r\n    headerName: \"Price\",\r\n    type: \"number\",\r\n    width: 90,\r\n  },\r\n];\r\n\r\nconst Home = ({ authData }) => {\r\n  const dispatch = useDispatch();\r\n  const actualbooks = booksData.map((book) => {\r\n    return {\r\n      id: book.id,\r\n      title: book.title,\r\n      authors: book.authors,\r\n      averageRating: \"⭐\".repeat(book.average_rating),\r\n      isbn: book.isbn,\r\n      languageCode: book.language_code,\r\n      ratingsCount: book.ratings_count,\r\n      price: book.price,\r\n    };\r\n  });\r\n\r\n  // useEffect(() => {\r\n\r\n  // Got CORS for accessing using axios\r\n\r\n  //   axios\r\n  //     .get(\r\n  //       \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json\"\r\n  //     )\r\n  //     .then((res) => {\r\n  //       // console.log(res);\r\n  //       // setBooks(res.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, []);\r\n\r\n  const handleSelect = (data) => {\r\n    const cartItems = [];\r\n    data.rowIds.forEach((id) => {\r\n      const obj = booksData.find((book) => book.id === +id);\r\n      cartItems.push({ ...obj, user: authData._id });\r\n    });\r\n    console.log(cartItems);\r\n    dispatch(actions.tempCart(cartItems));\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <DataGrid\r\n        onSelectionChange={(data) => handleSelect(data)}\r\n        rows={actualbooks}\r\n        columns={columns}\r\n        pageSize={50}\r\n        checkboxSelection={authData ? true : false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authData: state?.authReducer?.authData?.result,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n",["75","76"],"D:\\projects\\challenge\\src\\db\\booksdata.js",[],"D:\\projects\\challenge\\src\\store\\reducers\\authReducer.js",[],"D:\\projects\\challenge\\src\\store\\actions\\actionType.js",[],"D:\\projects\\challenge\\src\\pages\\Auth.js",["77"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Typography,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n  CircularProgress,\r\n  InputAdornment,\r\n  IconButton,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nimport useSusee from \"./authStyle\";\r\nimport * as action from \"../store/actions/index\";\r\n// import * as actionType from \"../store/actions/actionType\";\r\n\r\nconst Auth = () => {\r\n  const history = useHistory();\r\n  const classes = useSusee();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.authReducer.loading);\r\n  const errors = useSelector((state) => state.authReducer.errors);\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    profile: \"\",\r\n  });\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n  const changeMode = () => {\r\n    setIsSignup((prevState) => !prevState);\r\n    setForm({ ...form, profile: \"\", confirmPassword: \"\" });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    isSignup ? signup(e) : dispatch(action.signin(form, history));\r\n  };\r\n  const signup = (e) => {\r\n    dispatch(action.signup(form, history));\r\n  };\r\n  const handleClickShowPassword = () => {\r\n    setIsShowPassword((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={`${classes.root} ${classes.form}`}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {errors && errors?.message && (\r\n        <Typography color=\"error\" align=\"center\" variant=\"h6\">\r\n          {errors?.message}\r\n        </Typography>\r\n      )}\r\n      <Typography align=\"center\" variant=\"h6\">\r\n        {isSignup ? \"Signup\" : \"Signin\"}\r\n      </Typography>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel required htmlFor=\"emaio\">\r\n          Email\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          placeholder=\"JohnDoe@email.com\"\r\n          id=\"email\"\r\n          name=\"Email\"\r\n          variant=\"outlined\"\r\n          error={\r\n            errors && errors?.email\r\n              ? true\r\n              : false || (errors && errors?.message)\r\n              ? true\r\n              : false\r\n          }\r\n          label=\"Email\"\r\n          value={form.email}\r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n        />\r\n        {errors && errors?.email && errors?.email && (\r\n          <Typography\r\n            variant=\"caption\"\r\n            color=\"secondary\"\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            {errors && errors?.email && errors?.email}\r\n          </Typography>\r\n        )}\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel required htmlFor=\"password\">\r\n          Password\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"password\"\r\n          name=\"Password\"\r\n          variant=\"outlined\"\r\n          label=\"Password\"\r\n          type={isShowPassword ? \"text\" : \"password\"}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                edge=\"end\"\r\n              >\r\n                {isShowPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          error={\r\n            errors && errors?.password\r\n              ? true\r\n              : false || (errors && errors?.message)\r\n              ? true\r\n              : false\r\n          }\r\n          value={form.password}\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n        />\r\n        {errors && errors?.password && errors?.password && (\r\n          <Typography\r\n            variant=\"caption\"\r\n            color=\"secondary\"\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            {errors && errors?.password && errors?.password}\r\n          </Typography>\r\n        )}\r\n      </FormControl>\r\n      {isSignup && (\r\n        <>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel required htmlFor=\"confirmpassword\">\r\n              Confirm Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"confirmpassword\"\r\n              name=\"confirmpassword\"\r\n              variant=\"outlined\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={form.confirmPassword}\r\n              error={\r\n                errors && errors?.confirmPassword\r\n                  ? true\r\n                  : false || (errors && errors?.message)\r\n                  ? true\r\n                  : false\r\n              }\r\n              onChange={(e) =>\r\n                setForm({ ...form, confirmPassword: e.target.value })\r\n              }\r\n            />\r\n            {errors && errors?.confirmPassword && errors?.confirmPassword && (\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"secondary\"\r\n                display=\"block\"\r\n                gutterBottom\r\n              >\r\n                {errors && errors?.confirmPassword && errors?.confirmPassword}\r\n              </Typography>\r\n            )}\r\n          </FormControl>\r\n        </>\r\n      )}\r\n      <div className={classes.wrapper}>\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            onClick={changeMode}\r\n            disabled={loading}\r\n          >\r\n            {isSignup ? \"Have an account?\" : \"New user?\"}\r\n          </Button>\r\n          <Button\r\n            className={classes.buttonSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            // fullWidth\r\n            disabled={loading}\r\n          >\r\n            {isSignup ? \"Signup\" : \"Signin\"}\r\n          </Button>\r\n          {loading && (\r\n            <CircularProgress size={24} className={classes.buttonProgress} />\r\n          )}\r\n        </>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","D:\\projects\\challenge\\src\\store\\actions\\auth.js",[],"D:\\projects\\challenge\\src\\axios.js",[],"D:\\projects\\challenge\\src\\store\\actions\\index.js",[],"D:\\projects\\challenge\\src\\pages\\authStyle.js",[],"D:\\projects\\challenge\\src\\store\\actions\\cart.js",[],"D:\\projects\\challenge\\src\\store\\reducers\\cartReducer.js",[],"D:\\projects\\challenge\\src\\pages\\Cart.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"88","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"88","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":68,"column":6,"nodeType":"93","endLine":68,"endColumn":8,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.",["95"],["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authData', 'dispatch', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [authData, dispatch, history]",{"range":"100","text":"101"},[1593,1595],"[authData, dispatch, history]"]